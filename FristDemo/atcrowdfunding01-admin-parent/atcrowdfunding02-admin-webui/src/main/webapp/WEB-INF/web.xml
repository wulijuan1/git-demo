<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0">
	<!-- 配置 ContextLoaderListener 加载 Spring 配置文件 -->
<context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>classpath:spring-persist-*.xml</param-value>
</context-param>
	<!-- Bootstraps the root web application context before servlet initialization -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<!-- 配置 CharacterEncodingFilter 解决 POST 请求的字符乱码问题 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!-- 指定字符集 -->
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<!-- 强制请求进行编码 -->
		<init-param>
			<param-name>forceRequestEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 强制响应进行编码 -->
		<init-param>
			<param-name>forceResponseEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
<!--	解决 POST 请求的字符乱码问题。需要注意的是：在 web.xml 中存在多个 Filter
时，让这个 Filter 作为过滤器链中的第一个 Filter。
request.setCharacterEncoding(encoding) 要求必须在所有request.getParameter(xxx)操作前面
response.setCharacterEncoding(encoding)要求必须在所有 response.getWriter()操作前面
不满足这个顺序要求字符集设定无法生效-->
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置 SpringMVC 的前端控制器 -->
	<!-- The front controller of this Spring Web application, responsible for handling all application
    requests -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 以初始化参数的形式指定 SpringMVC 配置文件的位置 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-web-mvc.xml</param-value>
		</init-param>
		<!-- 让 DispatcherServlet 在 Web 应用启动时创建对象、初始化 -->
		<!-- 默认情况：Servlet 在第一次请求的时候创建对象、初始化 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- Map all requests to the DispatcherServlet for handling -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<!-- DispatcherServlet 映射的 URL 地址 -->
		<!-- 大白话：什么样的访问地址会交给 SpringMVC 来处理 -->
		<!-- 配置方式一：符合 RESTFUL 风格使用“/” -->
		<!-- <url-pattern>/</url-pattern> -->
		<!-- 配置方式二：请求扩展名 -->
		<url-pattern>*.html</url-pattern>
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>
	<!-- SpringSecurity 的 Filter -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>